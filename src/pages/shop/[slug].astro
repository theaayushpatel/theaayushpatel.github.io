---
import MainLayout from "../../layouts/MainLayout.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { products } from "../../content/products";
import type { Product } from "../../content/products";

export function getStaticPaths() {
  return products.map((product: Product) => ({
    params: { slug: product.slug }, // Changed from 'product' to 'slug' to match the file name
    props: { product }
  }));
}

const { product } = Astro.props;
---

<MainLayout>
  <Header />
  <section class="hero product-hero">
    <a href="/shop" class="back-link">Back to Shop</a>
    
    <div class="product-container">
      <div class="product-gallery">
        <img src={product.images[0]} alt={product.name} id="main-product-image" />
        
        {product.images.length > 1 && (
          <div class="product-thumbnails">
            {product.images.map((image: string, index: number) => (
              <div class={`thumbnail ${index === 0 ? 'active' : ''}`} data-image={image}>
                <img src={image} alt={`${product.name} view ${index + 1}`} />
              </div>
            ))}
          </div>
        )}
      </div>
      
      <div class="product-details">
        <h1>{product.name}</h1>
        <p class="product-price">${product.price.toFixed(2)}</p>
        <div class="product-description">
          {product.description.split('\n').map((paragraph: string) => (
            <p>{paragraph}</p>
          ))}
        </div>
        
        {product.features && product.features.length > 0 && (
          <div class="product-features">
            <h3>Features</h3>
            <ul>
              {product.features.map((feature: string) => (
                <li>{feature}</li>
              ))}
            </ul>
          </div>
        )}
        
        <div class="product-actions">
          {product.stores.map((store: { url: string; name: string }) => (
            <a href={store.url} target="_blank" rel="noopener noreferrer" class="store-button">
              Buy on {store.name}
            </a>
          ))}
        </div>
      </div>
    </div>
    
    <div class="more-products">
      <h2>More Products</h2>
      <div class="related-products">
        {products
          .filter((p: Product) => p.slug !== product.slug)
          .slice(0, 3)
          .map((p: Product) => (
            <a href={`/shop/${p.slug}`} class="related-product">
              <img src={p.images[0]} alt={p.name} />
              <h3>{p.name}</h3>
              <p class="related-product-price">${p.price.toFixed(2)}</p>
            </a>
          ))
        }
      </div>
    </div>
  </section>
  <Footer />
  
  <script>
    // Thumbnail gallery functionality
    document.addEventListener('DOMContentLoaded', () => {
      const mainImage = document.getElementById('main-product-image');
      const thumbnails = document.querySelectorAll('.thumbnail');
      
      thumbnails.forEach(thumb => {
        thumb.addEventListener('click', () => {
          if (!mainImage) return;
          // Update main image
          const image = thumb.dataset.image;
          if (image) {
            mainImage.src = image;
          }
          
          // Update active state
          thumbnails.forEach(t => t.classList.remove('active'));
          thumb.classList.add('active');
        });
      });
    });
  </script>
</MainLayout>

<style>
  .hero {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    padding: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .back-link {
    align-self: flex-start;
    text-decoration: none;
    color: #333;
    margin-bottom: 2rem;
    font-size: 1rem;
    font-weight: 500;
    transition: color 0.2s;
  }
  
  .back-link:hover {
    color: #000;
    text-decoration: underline;
  }
  
  .product-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    width: 100%;
  }
  
  .product-gallery {
    display: flex;
    flex-direction: column;
  }
  
  #main-product-image {
    width: 100%;
    height: auto;
    border-radius: 12px;
    margin-bottom: 1rem;
    background-color: #f9f9f9;
    object-fit: contain;
    max-height: 400px;
  }
  
  .product-thumbnails {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }
  
  .thumbnail {
    width: 80px;
    height: 80px;
    border-radius: 8px;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid transparent;
    transition: border 0.2s;
  }
  
  .thumbnail.active {
    border-color: #000;
  }
  
  .thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .product-details {
    display: flex;
    flex-direction: column;
  }
  
  .product-details h1 {
    font-size: 2.5rem;
    margin: 0 0 1rem 0;
  }
  
  .product-price {
    font-size: 1.8rem;
    font-weight: bold;
    color: #232323;
    margin: 0 0 1.5rem 0;
  }
  
  .product-description {
    margin-bottom: 2rem;
    line-height: 1.7;
  }
  
  .product-description p {
    margin-bottom: 1rem;
  }
  
  .product-features {
    margin-bottom: 2rem;
  }
  
  .product-features h3 {
    margin-bottom: 1rem;
    font-size: 1.3rem;
  }
  
  .product-features ul {
    padding-left: 1.5rem;
    list-style-type: disc;
  }
  
  .product-features li {
    margin-bottom: 0.5rem;
  }
  
  .product-actions {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    margin-top: 1rem;
  }
  
  .store-button {
    display: inline-block;
    padding: 0.8rem 1.5rem;
    background-color: #232323;
    color: white;
    text-decoration: none;
    border-radius: 8px;
    font-weight: 500;
    text-align: center;
    transition: background-color 0.3s, transform 0.2s;
  }
  
  .store-button:hover {
    background-color: #000;
    transform: translateY(-2px);
  }
  
  .more-products {
    width: 100%;
    margin-top: 4rem;
  }
  
  .more-products h2 {
    text-align: center;
    margin-bottom: 2rem;
    font-size: 1.8rem;
  }
  
  .related-products {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 2rem;
  }
  
  .related-product {
    text-decoration: none;
    color: inherit;
    border: 1px solid #e0e0e0;
    border-radius: 12px;
    overflow: hidden;
    transition: transform 0.3s, box-shadow 0.3s;
    background-color: #fff;
    display: flex;
    flex-direction: column;
    padding-bottom: 1rem;
  }
  
  .related-product:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
  }
  
  .related-product img {
    width: 100%;
    height: 180px;
    object-fit: cover;
    margin-bottom: 1rem;
  }
  
  .related-product h3 {
    padding: 0 1rem;
    margin: 0 0 0.5rem 0;
    font-size: 1.1rem;
  }
  
  .related-product-price {
    padding: 0 1rem;
    margin: 0;
    font-weight: bold;
    color: #232323;
  }
  
  @media (max-width: 900px) {
    .product-container {
      grid-template-columns: 1fr;
      gap: 2rem;
    }
    
    #main-product-image {
      max-height: 350px;
    }
    
    .product-details h1 {
      font-size: 2rem;
    }
    
    .related-products {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
  }
  
  @media (max-width: 600px) {
    .hero {
      padding: 1rem;
    }
    
    .product-details h1 {
      font-size: 1.8rem;
    }
    
    .product-price {
      font-size: 1.5rem;
    }
    
    .related-products {
      grid-template-columns: 1fr;
    }
  }
</style>